# This workflow will do a clean install of node dependencies and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: javascript-test-runner / main

on:
  push:
    branches: [main]

jobs:
  precheck:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Use Node.js LTS
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version-file: .nvmrc

      - name: Install project dependencies
        run: |
          corepack enable pnpm
          corepack pnpm -v
          corepack pnpm install --frozen-lockfile

      - name: Run exercism/javascript-test-runner ci precheck (lint code)
        run: bin/lint.sh

  ci:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install project dependencies
        run: |
          corepack enable pnpm
          corepack pnpm -v
          corepack pnpm install --frozen-lockfile

      - name: Build the test-runner (using Node ${{ matrix.node-version }})
        run: bin/test.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
        with:
          install: true

      - name: Build Docker image and store in cache
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
        with:
          context: .
          push: false
          load: true
          tags: exercism/javascript-test-runner
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Tests in Docker
        run: bin/run-tests-in-docker.sh
